    //
    // Main alg
    int timeUsed = 0;
    ArrayList<Library> librariesUsed = new ArrayList<Library>();
    while (time - timeUsed > 0) {

      int mst = libraries.get(0).getTimeToSet();
      int msti = 0;
      for (int i = 0; i < libraries.size(); i++) {
        if (libraries.get(i).getTimeToSet() <= mst) {
          mst = libraries.get(i).getTimeToSet();
          msti = i;
        }
      }

      libraries.get(msti).setOrder(msti);
      librariesUsed.add(libraries.get(msti));
      libraries.remove(msti);
      int tr = time - librariesUsed.get(librariesUsed.size() - 1).getTimeToSet();
      int bts = tr * librariesUsed.get(librariesUsed.size() - 1).getNumberOfBooksCanScan();
      for (int i = 0; i < bts; i++) {
        if (i < librariesUsed.get(librariesUsed.size() - 1).numBooks) {
          librariesUsed.get(librariesUsed.size() - 1).addBookToScan(i);
        }

      }


      timeUsed += librariesUsed.get(librariesUsed.size() - 1).getTimeToSet();
    }
    // Main alg
    //